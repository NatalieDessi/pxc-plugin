plugins {
    id 'java'
}

group = 'de.natalie'
version = '1.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion.set(JavaLanguageVersion.of(targetJavaVersion))
    }
}

tasks.register('buildTestServer') {
    dependsOn('clean')
    dependsOn('assemble')
    jar {
        destinationDirectory.set(file("$rootDir/testserver/plugins"))
    }
}

processResources {
    def props = [
            version       : version,
            jacksonVersion: jacksonVersion
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

private String getVersion() {
    final String[] splitVersion = project.version.toString().split("-")
    assert splitVersion.length == 2, "The version has the wrong format! The version should be in the format of 'x.x-SNAPSHOT'"
    assert splitVersion[1].toString().contains('SNAPSHOT'), "The version has no SNAPSHOT suffix!"
    splitVersion[0]
}

tasks.register('release') {
    project.version = getVersion()
    dependsOn('assemble')
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
